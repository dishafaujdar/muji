// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id   @default(uuid())
  email     String
  username  String    @unique
  password  String?
  Vote      Votes[]  
  provider  Providers
  Stream    Streams[]  
  role      Role
  hostedSpaces Space[]  @relation("hostedBy")
}

model Streams {
  id            String         @id        @default(uuid())
  title         String         @default("")
  UserId        String
  user          User     @relation(fields: [UserId] , references: [id])
  vote          Votes[]
  type          StreamType
  url           String
  exctractedId  String
  active        Boolean        @default(true)
  played        Boolean        @default(false)
  playedTs      DateTime?
  createAt      DateTime       @default(now())
  currentStream CurrentStream?
  spaceId       String?
  space         Space?         @relation("spaceStreams", fields: [spaceId], references: [id], onDelete: Cascade)
}

model CurrentStream {
  id        String      @id @default(uuid())
  userId    String    
  streamId  String?     @unique
  stream    Streams?     @relation(fields: [streamId] , references: [id])
  spaceId   String?     @unique
  space     Space?       @relation(fields: [spaceId] , references: [id])
}

model Space {
  id        String      @id @default(uuid())
  name      String    
  streams   Streams[]   @relation("spaceStreams")
  hostId    String
  host      User        @relation("hostedBy",fields: [hostId],references: [id])
  isActive  Boolean      @default(true)
  currentStream CurrentStream?
}

model Votes {
  id        String    @id   @default(uuid())
  UserId    String
  StreamId  String   
  user      User     @relation(fields: [UserId] , references: [id] )
  Stream    Streams  @relation(fields: [StreamId] , references: [id] )

  @@unique([StreamId , UserId])


}

enum Role {
  Admin
  User
}

enum Providers {
  Google
}

enum StreamType {
  Youtube
  Spotify
}